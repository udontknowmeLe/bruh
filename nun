local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Yero Script #hellmid0_0", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

local MainTab = Window:MakeTab({
	Name = "Home",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

OrionLib:MakeNotification({
	Name = "Read!",
	Content = "You Must Start Job Before Starting Auto Farm!",
	Image = "rbxassetid://4483345998",
	Time = 7
})



MainTab:AddButton({
	Name = "AimLock (Q To Lock)",
	Callback = function()
		getgenv().OldAimPart = "HumanoidRootPart"
		getgenv().AimPart = "Head" -- For R15 Games: {UpperTorso, LowerTorso, HumanoidRootPart, Head} | For R6 Games: {Head, Torso, HumanoidRootPart}  
		getgenv().AimlockKey = "q"
		getgenv().AimRadius = 30 -- How far away from someones character you want to lock on at
		getgenv().ThirdPerson = true 
		getgenv().FirstPerson = true
		getgenv().TeamCheck = false -- Check if Target is on your Team (True means it wont lock onto your teamates, false is vice versa) (Set it to false if there are no teams)
		getgenv().PredictMovement = true -- Predicts if they are moving in fast velocity (like jumping) so the aimbot will go a bit faster to match their speed 
		getgenv().PredictionVelocity = 9.100
		getgenv().CheckIfJumped = true
		getgenv().Smoothness = false
		getgenv().SmoothnessAmount = 0.2

		local Players, Uis, RService, SGui = game:GetService"Players", game:GetService"UserInputService", game:GetService"RunService", game:GetService"StarterGui";
		local Client, Mouse, Camera, CF, RNew, Vec3, Vec2 = Players.LocalPlayer, Players.LocalPlayer:GetMouse(), workspace.CurrentCamera, CFrame.new, Ray.new, Vector3.new, Vector2.new;
		local Aimlock, MousePressed, CanNotify = true, false, false;
		local AimlockTarget;
		local OldPre;



		getgenv().WorldToViewportPoint = function(P)
			return Camera:WorldToViewportPoint(P)
		end

		getgenv().WorldToScreenPoint = function(P)
			return Camera.WorldToScreenPoint(Camera, P)
		end

		getgenv().GetObscuringObjects = function(T)
			if T and T:FindFirstChild(getgenv().AimPart) and Client and Client.Character:FindFirstChild("Head") then 
				local RayPos = workspace:FindPartOnRay(RNew(
					T[getgenv().AimPart].Position, Client.Character.Head.Position)
				)
				if RayPos then return RayPos:IsDescendantOf(T) end
			end
		end

		getgenv().GetNearestTarget = function()
			-- Credits to whoever made this, i didnt make it, and my own mouse2plr function kinda sucks
			local players = {}
			local PLAYER_HOLD  = {}
			local DISTANCES = {}
			for i, v in pairs(Players:GetPlayers()) do
				if v ~= Client then
					table.insert(players, v)
				end
			end
			for i, v in pairs(players) do
				if v.Character ~= nil then
					local AIM = v.Character:FindFirstChild("Head")
					if getgenv().TeamCheck == true and v.Team ~= Client.Team then
						local DISTANCE = (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
						local RAY = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE)
						local HIT,POS = game.Workspace:FindPartOnRay(RAY, game.Workspace)
						local DIFF = math.floor((POS - AIM.Position).magnitude)
						PLAYER_HOLD[v.Name .. i] = {}
						PLAYER_HOLD[v.Name .. i].dist= DISTANCE
						PLAYER_HOLD[v.Name .. i].plr = v
						PLAYER_HOLD[v.Name .. i].diff = DIFF
						table.insert(DISTANCES, DIFF)
					elseif getgenv().TeamCheck == false and v.Team == Client.Team then 
						local DISTANCE = (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
						local RAY = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE)
						local HIT,POS = game.Workspace:FindPartOnRay(RAY, game.Workspace)
						local DIFF = math.floor((POS - AIM.Position).magnitude)
						PLAYER_HOLD[v.Name .. i] = {}
						PLAYER_HOLD[v.Name .. i].dist= DISTANCE
						PLAYER_HOLD[v.Name .. i].plr = v
						PLAYER_HOLD[v.Name .. i].diff = DIFF
						table.insert(DISTANCES, DIFF)
					end
				end
			end

			if unpack(DISTANCES) == nil then
				return nil
			end

			local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
			if L_DISTANCE > getgenv().AimRadius then
				return nil
			end

			for i, v in pairs(PLAYER_HOLD) do
				if v.diff == L_DISTANCE then
					return v.plr
				end
			end
			return nil
		end

		Mouse.KeyDown:Connect(function(a)
			if not (Uis:GetFocusedTextBox()) then 
				if a == AimlockKey and AimlockTarget == nil then
					pcall(function()
						if MousePressed ~= true then MousePressed = true end 
						local Target;Target = GetNearestTarget()
						if Target ~= nil then 
							AimlockTarget = Target
						end
					end)
				elseif a == AimlockKey and AimlockTarget ~= nil then
					if AimlockTarget ~= nil then AimlockTarget = nil end
					if MousePressed ~= false then 
						MousePressed = false 
					end
				end
			end
		end)

		RService.RenderStepped:Connect(function()
			if getgenv().ThirdPerson == true and getgenv().FirstPerson == true then 
				if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1 or (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1 then 
					CanNotify = true 
				else 
					CanNotify = false 
				end
			elseif getgenv().ThirdPerson == true and getgenv().FirstPerson == false then 
				if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1 then 
					CanNotify = true 
				else 
					CanNotify = false 
				end
			elseif getgenv().ThirdPerson == false and getgenv().FirstPerson == true then 
				if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1 then 
					CanNotify = true 
				else 
					CanNotify = false 
				end
			end
			if Aimlock == true and MousePressed == true then 
				if AimlockTarget and AimlockTarget.Character and AimlockTarget.Character:FindFirstChild(getgenv().AimPart) then 
					if getgenv().FirstPerson == true then
						if CanNotify == true then
							if getgenv().PredictMovement == true then
								if getgenv().Smoothness == true then
									--// The part we're going to lerp/smoothen \\--
									local Main = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position + AimlockTarget.Character[getgenv().AimPart].Velocity/PredictionVelocity)

									--// Making it work \\--
									Camera.CFrame = Camera.CFrame:Lerp(Main, getgenv().SmoothnessAmount, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut)
								else
									Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position + AimlockTarget.Character[getgenv().AimPart].Velocity/PredictionVelocity)
								end
							elseif getgenv().PredictMovement == false then 
								if getgenv().Smoothness == true then
									--// The part we're going to lerp/smoothen \\--
									local Main = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position)

									--// Making it work \\--
									Camera.CFrame = Camera.CFrame:Lerp(Main, getgenv().SmoothnessAmount, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut)
								else
									Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position)
								end
							end
						end
					end
				end
			end
			if CheckIfJumped == true then
				if AimlockTarget.Character.HuDDDDDDDDDDWmanoid.FloorMaterial == Enum.Material.Air then

					getgenv().AimPart = "HumanoidRootPart"
				else
					getgenv().AimPart = getgenv().OldAimPart

				end
			end
		end)
	end,
})


MainTab:AddButton({
	Name = "Walk Faster",
	Callback = function()
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 23
    -- The function that takes place when the button is pressed
    end,
 })

MainTab:AddButton({
	Name = "Fly",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/hellmid122/script-0x391/main/yero0x"))()
	end,
})

local EspTab = Window:MakeTab({
	Name = "Esp",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
EspTab:AddButton({
	Name = "Esp Players",
	Callback = function()
		local Settings = {
    Box_Color = Color3.fromRGB(255, 0, 0),
    Tracer_Color = Color3.fromRGB(255, 0, 0),
    Tracer_Thickness = 1,
    Box_Thickness = 1,
    Tracer_Origin = "Bottom", -- Middle or Bottom if FollowMouse is on this won't matter...
    Tracer_FollowMouse = false,
    Tracers = true
}
local Team_Check = {
    TeamCheck = false, -- if TeamColor is on this won't matter...
    Green = Color3.fromRGB(0, 255, 0),
    Red = Color3.fromRGB(255, 0, 0)
}
local TeamColor = true

--// SEPARATION
local player = game:GetService("Players").LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local mouse = player:GetMouse()

local function NewQuad(thickness, color)
    local quad = Drawing.new("Quad")
    quad.Visible = false
    quad.PointA = Vector2.new(0,0)
    quad.PointB = Vector2.new(0,0)
    quad.PointC = Vector2.new(0,0)
    quad.PointD = Vector2.new(0,0)
    quad.Color = color
    quad.Filled = false
    quad.Thickness = thickness
    quad.Transparency = 1
    return quad
end

local function NewLine(thickness, color)
    local line = Drawing.new("Line")
    line.Visible = false
    line.From = Vector2.new(0, 0)
    line.To = Vector2.new(0, 0)
    line.Color = color 
    line.Thickness = thickness
    line.Transparency = 1
    return line
end

local function Visibility(state, lib)
    for u, x in pairs(lib) do
        x.Visible = state
    end
end

local function ToColor3(col) --Function to convert, just cuz c;
    local r = col.r --Red value
    local g = col.g --Green value
    local b = col.b --Blue value
    return Color3.new(r,g,b); --Color3 datatype, made of the RGB inputs
end

local black = Color3.fromRGB(0, 0 ,0)
local function ESP(plr)
    local library = {
        --//Tracer and Black Tracer(black border)
        blacktracer = NewLine(Settings.Tracer_Thickness*2, black),
        tracer = NewLine(Settings.Tracer_Thickness, Settings.Tracer_Color),
        --//Box and Black Box(black border)
        black = NewQuad(Settings.Box_Thickness*2, black),
        box = NewQuad(Settings.Box_Thickness, Settings.Box_Color),
        --//Bar and Green Health Bar (part that moves up/down)
        healthbar = NewLine(3, black),
        greenhealth = NewLine(1.5, black)
    }

    local function Colorize(color)
        for u, x in pairs(library) do
            if x ~= library.healthbar and x ~= library.greenhealth and x ~= library.blacktracer and x ~= library.black then
                x.Color = color
            end
        end
    end

    local function Updater()
        local connection
        connection = game:GetService("RunService").RenderStepped:Connect(function()
            if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") ~= nil and plr.Character:FindFirstChild("HumanoidRootPart") ~= nil and plr.Character.Humanoid.Health > 0 and plr.Character:FindFirstChild("Head") ~= nil then
                local HumPos, OnScreen = camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position)
                if OnScreen then
                    local head = camera:WorldToViewportPoint(plr.Character.Head.Position)
                    local DistanceY = math.clamp((Vector2.new(head.X, head.Y) - Vector2.new(HumPos.X, HumPos.Y)).magnitude, 2, math.huge)
                    
                    local function Size(item)
                        item.PointA = Vector2.new(HumPos.X + DistanceY, HumPos.Y - DistanceY*2)
                        item.PointB = Vector2.new(HumPos.X - DistanceY, HumPos.Y - DistanceY*2)
                        item.PointC = Vector2.new(HumPos.X - DistanceY, HumPos.Y + DistanceY*2)
                        item.PointD = Vector2.new(HumPos.X + DistanceY, HumPos.Y + DistanceY*2)
                    end
                    Size(library.box)
                    Size(library.black)

                    

                    --// Health Bar
                    local d = (Vector2.new(HumPos.X - DistanceY, HumPos.Y - DistanceY*2) - Vector2.new(HumPos.X - DistanceY, HumPos.Y + DistanceY*2)).magnitude 
                    local healthoffset = plr.Character.Humanoid.Health/plr.Character.Humanoid.MaxHealth * d

                    library.greenhealth.From = Vector2.new(HumPos.X - DistanceY - 4, HumPos.Y + DistanceY*2)
                    library.greenhealth.To = Vector2.new(HumPos.X - DistanceY - 4, HumPos.Y + DistanceY*2 - healthoffset)

                    library.healthbar.From = Vector2.new(HumPos.X - DistanceY - 4, HumPos.Y + DistanceY*2)
                    library.healthbar.To = Vector2.new(HumPos.X - DistanceY - 4, HumPos.Y - DistanceY*2)

                    local green = Color3.fromRGB(0, 255, 0)
                    local red = Color3.fromRGB(255, 0, 0)

                    library.greenhealth.Color = red:lerp(green, plr.Character.Humanoid.Health/plr.Character.Humanoid.MaxHealth);

                    if Team_Check.TeamCheck then
                        if plr.TeamColor == player.TeamColor then
                            Colorize(Team_Check.Green)
                        else 
                            Colorize(Team_Check.Red)
                        end
                    else 
                        library.tracer.Color = Settings.Tracer_Color
                        library.box.Color = Settings.Box_Color
                    end
                    if TeamColor == true then
                        Colorize(plr.TeamColor.Color)
                    end
                    Visibility(true, library)
                else 
                    Visibility(false, library)
                end
            else 
                Visibility(false, library)
                if game.Players:FindFirstChild(plr.Name) == nil then
                    connection:Disconnect()
                end
            end
        end)
    end
    coroutine.wrap(Updater)()
end

for i, v in pairs(game:GetService("Players"):GetPlayers()) do
    if v.Name ~= player.Name then
        coroutine.wrap(ESP)(v)
    end
end

game.Players.PlayerAdded:Connect(function(newplr)
    if newplr.Name ~= player.Name then
        coroutine.wrap(ESP)(newplr)
    end
end)
   end,
})



EspTab:AddButton({
	Name = "Esp Atms",
	Callback = function()
		-- loadstring
		local ESP = loadstring(game:HttpGet("https://kiriot22.com/releases/ESP.lua"))()

		-- config
		ESP.Players = false
		ESP.Boxes = false
		ESP.Names = true
		ESP:Toggle(true)

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM5", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM1", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true



		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM12", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM2", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true



		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM15", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM3", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM13", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM4", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM14", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM5", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM11", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM6", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM10", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM7", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM9", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM8", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM1", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM9", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM2", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM10", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM3", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM11", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM4", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM12", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM7", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM13", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM8", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM14", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true

		-- object
		ESP:AddObjectListener(Workspace.Map.ATMS, { -- Object Path, For example: Workspace.ThisFolder
			Name = "ATM6", --Object name inside of the path, for example: Workspace.ThisFolder.Item_1
			CustomName = "ATM15", -- Name you want to be displayed
			Color = Color3.fromRGB(260, 260, 260), -- Color
			IsEnabled = "whatever" -- Any name, has to be the same as the last line: ESP.TheNameYouWant
		})
		ESP.whatever = true
	end,
})

local AutoFarmTab = Window:MakeTab({
	Name = "AutoFarm",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
AutoFarmTab:AddButton({
	Name = "Box Auto Farm",
	Callback = function()
        print("Loading")
repeat wait() until game:IsLoaded()

local ProximityPromptService = game:GetService("ProximityPromptService")

if _G.hold then _G.hold:Disconnect() end
_G.hold = ProximityPromptService.PromptButtonHoldBegan:Connect(function(prompt)
    prompt.HoldDuration = 0.1;
end)

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local camera = game.Workspace.CurrentCamera

local truck = game.Workspace:WaitForChild("cratetruck2")

local jobStart = game.Workspace:WaitForChild("PlaceHere")
local startProx = jobStart:FindFirstChild("Attachment"):FindFirstChild("ProximityPrompt")

local jobEnd = truck:WaitForChild("Model"):WaitForChild("ClickBox")
local endProx = jobEnd:FindFirstChild("ProximityPrompt")

local function walkTo(humanoid: Humanoid, position: Vector3, distance)
if not distance then distance = 10 end

humanoid:MoveTo(position)
repeat humanoid:MoveTo(position) wait(0.25) until (humanoid.Parent.PrimaryPart.Position - position).Magnitude < distance

return
end

local function loop(speed)
--print("Loop")
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:FindFirstChild("Humanoid")

--print("Running checks.")
if not humanoid then warn("Could not find humanoid") return end
if (character.PrimaryPart.Position - jobStart.Position).Magnitude > 15 then warn("Primary distance exceeds 15 studs") return end

if speed then humanoid.WalkSpeed = 23 end

walkTo(humanoid, jobStart.Position, startProx.MaxActivationDistance)

camera.CameraSubject = jobStart
repeat fireproximityprompt(startProx, 1) wait(startProx.HoldDuration+0.25) until player.Backpack:FindFirstChild("Crate")
camera.CameraSubject = character.PrimaryPart
player.Backpack:FindFirstChild("Crate").Parent = character

if speed then humanoid.WalkSpeed = 23 end
walkTo(humanoid, Vector3.new(-540, 4, -83), 1)
walkTo(humanoid, jobEnd.Position - Vector3.new(0,0,5), endProx.MaxActivationDistance)

camera.CameraSubject = jobEnd
repeat fireproximityprompt(endProx, 1) wait(endProx.HoldDuration+0.25) until not character:FindFirstChild("Crate")
camera.CameraSubject = character.PrimaryPart
walkTo(humanoid, Vector3.new(-540, 4, -83), 1)


humanoid.WalkSpeed = 10
end

print("Loaded")

if _G.enabled then _G.enabled = not _G.enabled end

_G.enabled = true
local runSpeed = true
while _G.enabled == true do task.wait()
loop(runSpeed)
end
    -- The function that takes place when the button is pressed
    end,
 })



local MiscTab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

AutoFarmTab:AddButton({
	Name = "Atm Auto Farm (Broken)",
	Callback = function()
-- Function to teleport to specific coordinates and hold 'E' key

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local backpack = player.Backpack
local coordinates = {
    Vector3.new(698.394287109375, 3.5371994972229004, 170.7313232421875),
    Vector3.new(729.8390502929688, 3.4121947288513184, 211.96453857421875)
}
local stopScript = false

local function HoldEFor2Seconds()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.E, false, game)
    wait(1)
    game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.E, false, game)
end

local function MoveBackAndForth()
    while not stopScript do
        for i = 1, #coordinates do
            local coord = coordinates[i]
            humanoid.WalkSpeed = 22
            humanoid:MoveTo(coord)
            humanoid.MoveToFinished:Wait()

            if stopScript then
                return  -- Exit the function if stopScript is true
            end

            if backpack then
                local crate = backpack:FindFirstChild("TrashBag")
                if crate then
                    crate.Parent = character
                end
            end

            HoldEFor2Seconds()
        end
    end
end

local function OnKeyPress(input)
    if input.KeyCode == Enum.KeyCode.F1 then
        stopScript = true
        humanoid.WalkSpeed = 16  -- Reset walk speed to default when stopping
    end
end

game:GetService("UserInputService").InputBegan:Connect(OnKeyPress)

MoveBackAndForth()
 end
}) 

AutoFarmTab:AddButton({
	Name = "Trash Auto Farm (Broken)",
	Callback = function()
            		-- Function to teleport to specific coordinates and hold 'E' key

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local backpack = player.Backpack
local coordinates = {
    Vector3.new(698.394287109375, 3.5371994972229004, 170.7313232421875),
    Vector3.new(729.8390502929688, 3.4121947288513184, 211.96453857421875)
}
local stopScript = false

local function HoldEFor2Seconds()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.E, false, game)
    wait(1)
    game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.E, false, game)
end

local function MoveBackAndForth()
    while not stopScript do
        for i = 1, #coordinates do
            local coord = coordinates[i]
            humanoid.WalkSpeed = 22
            humanoid:MoveTo(coord)
            humanoid.MoveToFinished:Wait()

            if stopScript then
                return  -- Exit the function if stopScript is true
            end

            if backpack then
                local crate = backpack:FindFirstChild("TrashBag")
                if crate then
                    crate.Parent = character
                end
            end

            HoldEFor2Seconds()
        end
    end
end

local function OnKeyPress(input)
    if input.KeyCode == Enum.KeyCode.F1 then
        stopScript = true
        humanoid.WalkSpeed = 16  -- Reset walk speed to default when stopping
    end
end

game:GetService("UserInputService").InputBegan:Connect(OnKeyPress)

MoveBackAndForth()
 end
}) 

MiscTab:AddButton({
	Name = "Instant Loot",
	Callback = function()
           local ProximityPromptService = game:GetService("ProximityPromptService")

if _G.hold then _G.hold:Disconnect() end
_G.hold = ProximityPromptService.PromptButtonHoldBegan:Connect(function(prompt)
    prompt.HoldDuration = 0;
end)


   -- The function that takes place when the button is pressed
   end,
})


AutoFarmTab:AddButton({
	Name = "Anti Afk (Must Use While Farming!)",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/hellmid122/script-0x391/main/anti%20afk%20og"))()
		-- The function that takes place when the button is pressed
		end,
  	    
})

MiscTab:AddButton({
	Name = "Show Guns",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/hellmid122/script-0x391/main/guns"))()
	end,
		
  	    
})


MainTab:AddButton({
	Name = "Silent Aim (Semi)",
	Callback = function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/rijadha22/gggg/refs/heads/main/huh'))()
	end,
})




